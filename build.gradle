
// For those who want the bleeding edge
buildscript {
    ext.kotlin_version = '1.0.5-2'
    repositories {
        mavenCentral()
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'kotlin'


repositories {
    maven {
        url "http://mvn.rx14.co.uk/shadowfacts/"
    }
}


version = "3.2.7dev MC1.9.4"
group= "" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "HudPixelReloaded-1.9.4-v3"

minecraft {
    version = "1.9.4-12.17.0.2051"
    runDir = "run"
    
    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not allways work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "snapshot_20160518"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

configurations {
    required
    compile.extendsFrom(required)
}

dependencies {
    compile 'joda-time:joda-time:2.9.6'
    required 'joda-time:joda-time:2.9.6'
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    required "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile "net.shadowfacts:Forgelin:1.1.0"
    required "net.shadowfacts:Forgelin:1.1.0"


}

apply plugin: 'java'
sourceCompatibility = targetCompatibility = '1.8'
compileJava {
    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
}

jar {
    // We need to make sure we package kotlin runtimes.
    dependsOn configurations.compile
    from {
        configurations.required.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
}

sourceSets { main.java.srcDirs += 'src/main/kotlin'
    main.java.srcDirs += 'src/main/kotlin'
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
repositories {
    mavenCentral()
}
